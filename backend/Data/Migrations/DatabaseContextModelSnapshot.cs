// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Data;

namespace backend.Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4");

            modelBuilder.Entity("backend.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Image = "lampadas.svg",
                            Title = "Lâmpadas"
                        },
                        new
                        {
                            Id = 2,
                            Image = "baterias.svg",
                            Title = "Pilhas e Baterias"
                        },
                        new
                        {
                            Id = 3,
                            Image = "papeis-papelao.svg",
                            Title = "Papéis e Papelão"
                        },
                        new
                        {
                            Id = 4,
                            Image = "eletronicos.svg",
                            Title = "Resíduos Eletrônicos"
                        },
                        new
                        {
                            Id = 5,
                            Image = "organicos.svg",
                            Title = "Resíduos Orgânicos"
                        },
                        new
                        {
                            Id = 6,
                            Image = "oleo.svg",
                            Title = "Óleo de Cozinha"
                        });
                });

            modelBuilder.Entity("backend.Models.Point", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(2);

                    b.Property<string>("Whatsapp")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Points");
                });

            modelBuilder.Entity("backend.Models.Point_Item", b =>
                {
                    b.Property<int>("Point_Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Item_Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Point_Id", "Item_Id");

                    b.HasIndex("Item_Id");

                    b.ToTable("Point_Item");
                });

            modelBuilder.Entity("backend.Models.Point_Item", b =>
                {
                    b.HasOne("backend.Models.Item", "Item")
                        .WithMany("Point_Item")
                        .HasForeignKey("Item_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.Point", "Point")
                        .WithMany("Point_Item")
                        .HasForeignKey("Point_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
